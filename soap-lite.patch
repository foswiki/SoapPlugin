--- /tmp/SOAP-Lite-0.715/blib/lib/SOAP/Lite.pm	2012-07-15 11:35:18.000000000 +0200
+++ lib/SOAP/Lite.pm	2012-09-03 11:26:58.679175416 +0200
@@ -1942,39 +1942,38 @@
         : @{$self->{_current}} ? (SOAP::Utils::splitlongname(o_lname($self->{_current}->[0])))[0] : undef;
 }
 
-#sub _as_data {
-#    my $self = shift;
-#    my $pointer = shift;
-#
-#    SOAP::Data
-#        -> new(prefix => '', name => o_qname($pointer), name => o_lname($pointer), attr => o_lattr($pointer))
-#        -> set_value(o_value($pointer));
-#}
-
 sub _as_data {
     my $self = shift;
-    my $node = shift;
-
-    my $data = SOAP::Data->new( prefix => '',
-        # name => o_qname has side effect: sets namespace !
-        name => o_qname($node),
-        name => o_lname($node),
-        attr => o_lattr($node) );
-
-    if ( defined o_child($node) ) {
-        my @children;
-        foreach my $child ( @{ o_child($node) } ) {
-            push( @children, $self->_as_data($child) );
-        }
-        $data->set_value( \SOAP::Data->value(@children) );
-    }
-    else {
-        $data->set_value( o_value($node) );
-    }
+    my $pointer = shift;
 
-    return $data;
+    SOAP::Data
+        -> new(prefix => '', name => o_qname($pointer), name => o_lname($pointer), attr => o_lattr($pointer))
+        -> set_value(o_value($pointer));
 }
 
+#sub _as_data {
+#    my $self = shift;
+#    my $node = shift;
+#
+#    my $data = SOAP::Data->new( prefix => '',
+#        # name => o_qname has side effect: sets namespace !
+#        name => o_qname($node),
+#        name => o_lname($node),
+#        attr => o_lattr($node) );
+#
+#    if ( defined o_child($node) ) {
+#        my @children;
+#        foreach my $child ( @{ o_child($node) } ) {
+#            push( @children, $self->_as_data($child) );
+#        }
+#        $data->set_value( \SOAP::Data->value(@children) );
+#    }
+#    else {
+#        $data->set_value( o_value($node) );
+#    }
+#
+#    return $data;
+#}
 
 sub match {
     my $self = shift;
@@ -3433,6 +3432,10 @@
 
 1;
 EOP
+
+    # untaint stub code
+    $self->{'_stub'} =~ /^(.*)$/s; $self->{'_stub'} = $1;
+
     return $self->stub;
 }
 
